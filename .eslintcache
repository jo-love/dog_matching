[{"/Users/jyj/Documents/Projects/showmemydog/src/index.tsx":"1","/Users/jyj/Documents/Projects/showmemydog/src/Styles/globalStyles.ts":"2","/Users/jyj/Documents/Projects/showmemydog/src/Routes.tsx":"3","/Users/jyj/Documents/Projects/showmemydog/src/Styles/theme.ts":"4","/Users/jyj/Documents/Projects/showmemydog/src/Contexts/ResultContext.tsx":"5","/Users/jyj/Documents/Projects/showmemydog/src/Pages/Contributors/index.tsx":"6","/Users/jyj/Documents/Projects/showmemydog/src/Pages/Main/index.tsx":"7","/Users/jyj/Documents/Projects/showmemydog/src/Pages/Result/index.tsx":"8","/Users/jyj/Documents/Projects/showmemydog/src/Pages/Quiz/index.tsx":"9","/Users/jyj/Documents/Projects/showmemydog/src/API.ts":"10","/Users/jyj/Documents/Projects/showmemydog/src/Pages/Result/Card.tsx":"11","/Users/jyj/Documents/Projects/showmemydog/src/Pages/Quiz/Button.tsx":"12"},{"size":246,"mtime":1611927354408,"results":"13","hashOfConfig":"14"},{"size":1279,"mtime":1612663160324,"results":"15","hashOfConfig":"14"},{"size":831,"mtime":1612715922246,"results":"16","hashOfConfig":"14"},{"size":743,"mtime":1612715922246,"results":"17","hashOfConfig":"14"},{"size":613,"mtime":1612763405060,"results":"18","hashOfConfig":"14"},{"size":2896,"mtime":1612715922240,"results":"19","hashOfConfig":"14"},{"size":3305,"mtime":1612715922241,"results":"20","hashOfConfig":"14"},{"size":1711,"mtime":1612715922245,"results":"21","hashOfConfig":"14"},{"size":940,"mtime":1612715922242,"results":"22","hashOfConfig":"14"},{"size":179,"mtime":1611927354404,"results":"23","hashOfConfig":"14"},{"size":2278,"mtime":1612715922244,"results":"24","hashOfConfig":"14"},{"size":4539,"mtime":1612879382079,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"nmrplc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/Users/jyj/Documents/Projects/showmemydog/src/index.tsx",[],[],"/Users/jyj/Documents/Projects/showmemydog/src/Styles/globalStyles.ts",[],"/Users/jyj/Documents/Projects/showmemydog/src/Routes.tsx",[],"/Users/jyj/Documents/Projects/showmemydog/src/Styles/theme.ts",[],"/Users/jyj/Documents/Projects/showmemydog/src/Contexts/ResultContext.tsx",["55"],"import { createContext, useContext, useState } from 'react';\n\nexport type ResultData = {\n\tid: number;\n\timg: string;\n\tname: string;\n\taverageSize: string;\n\tplay: string;\n\tdescription: string;\n};\n\nexport const ResultContext = createContext<ResultData | undefined>(undefined);\n\nexport function ResultContextProvider({ children }: { children: React.ReactNode }) {\n\tconst [result, setResult] = useState([]);\n\n\tconst value: any = {\n\t\tresult,\n\t\tsetResult,\n\t};\n\n\treturn <ResultContext.Provider value={value}>{children}</ResultContext.Provider>;\n}\n\nexport function useResultContext() {\n\treturn useContext(ResultContext);\n}\n","/Users/jyj/Documents/Projects/showmemydog/src/Pages/Contributors/index.tsx",[],"/Users/jyj/Documents/Projects/showmemydog/src/Pages/Main/index.tsx",[],"/Users/jyj/Documents/Projects/showmemydog/src/Pages/Result/index.tsx",["56"],"import { ResultData, useResultContext } from '../../Contexts/ResultContext';\nimport { useHistory } from 'react-router';\nimport Card from './Card';\nimport styled from 'styled-components';\n\nfunction Result() {\n\tconst { result }: any = useResultContext();\n\tconst history = useHistory();\n\n\tconst goToSite = () => {\n\t\twindow.open('https://www.zooseyo.or.kr/Yu_board/freesale_ty_1.html?ty=1');\n\t};\n\n\tconst restart = () => {\n\t\thistory.push('/');\n\t};\n\n\tconst contributors = () => {\n\t\thistory.push('/contributors');\n\t};\n\n\treturn (\n\t\t<ResultWrapper>\n\t\t\t<strong>당신에게 추천하는 강아지는</strong>\n\t\t\t{result.map((dog: ResultData, idx: number) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\tid={idx+1}\n\t\t\t\t\t\timg={dog.img}\n\t\t\t\t\t\tname={dog.name}\n\t\t\t\t\t\taverageSize={dog.averageSize}\n\t\t\t\t\t\tplay={dog.play}\n\t\t\t\t\t\tdescription={dog.description}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<button onClick={restart}>다시하러 가기</button>\n\t\t\t<button onClick={goToSite}>유기견 무료 분양 보러가기</button>\n\t\t\t<button onClick={contributors}>만든 사람들</button>\n\t\t</ResultWrapper>\n\t);\n}\n\nexport default Result;\n\nconst ResultWrapper = styled.div`\n\t${({ theme }) => theme.positions.flexColumnY};\n\tstrong {\n\t\tmargin: 50px 0;\n\t\tfont-size: 20px;\n\t\tcolor: ${({ theme }) => theme.colors.textWhite};\n\t}\n\n\tbutton {\n\t\twidth: 250px;\n\t\theight: 50px;\n\t\tmargin-bottom: 10px;\n\t\tletter-spacing: 3px;\n\t\tbackground-color: ${({ theme }) => theme.colors.button};\n\t\tcolor: ${({ theme }) => theme.colors.textWhite};\n\t\tborder-radius: 7px;\n\t\tfont-size: 1rem;\n\t\tcursor: pointer;\n\t\tbox-shadow: rgb(0 0 0) 0px 5px 5px -5px;\n\t}\n\n\t@media ${({ theme }) => theme.size.mobile} {\n\t\tstrong {\n\t\t\tmargin: 15px 0 50px 0;\n\t\t\tfont-size: 18px;\n\t\t}\n\t}\n`;\n","/Users/jyj/Documents/Projects/showmemydog/src/Pages/Quiz/index.tsx",[],"/Users/jyj/Documents/Projects/showmemydog/src/API.ts",[],"/Users/jyj/Documents/Projects/showmemydog/src/Pages/Result/Card.tsx",[],[],"/Users/jyj/Documents/Projects/showmemydog/src/Pages/Quiz/Button.tsx",["57"],"import { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { ANSWERAPI } from '../../API';\nimport { QAData, UserAnswerData, ProgressBarProps } from './types';\nimport { useResultContext } from '../../Contexts/ResultContext';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nfunction Button({ id, question, symbol, selections, number, setNumber }: QAData) {\n\tconst [userAnswers, setUserAnswers] = useState<UserAnswerData>({});\n\tconst [left, setLeft] = useState(-100);\n\tconst { setResult }: any = useResultContext();\n\tconst [loading, setLoading] = useState(false);\n\tconst history = useHistory();\n\n\tconst checkAnswer = (QId: number, AId: number) => {\n\t\tconst key = QId;\n\t\tconst obj = { [`${key}`]: AId };\n\t\tsetUserAnswers({ ...userAnswers, ...obj });\n\t\tif (QId === 10) {\n\t\t\tsetLoading(true);\n\t\t\taxios\n\t\t\t\t.post(ANSWERAPI, userAnswers)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\tsetResult(res.data);\n\t\t\t\t\thistory.push('/result');\n\t\t\t\t})\n\t\t\t\t.catch((error) => console.log(error));\n\t\t}\n\t\tif (QId !== 10) {\n\t\t\tnextQuestion();\n\t\t}\n\t};\n\n\tconst previousQuestion = () => {\n\t\tsetNumber(number - 1);\n\t\tsetLeft(left - 21.5);\n\t};\n\n\tconst nextQuestion = () => {\n\t\tsetNumber(number + 1);\n\t\tsetLeft(left + 21.5);\n\t};\n\n\treturn (\n\t\t<AnswerWrapper>\n\t\t\t{loading && (\n\t\t\t\t<div className=\"loadingSpinner\">\n\t\t\t\t\t<img src=\"/Images/spinningDog.gif\" alt=\"spinningDog\" />\n\t\t\t\t\t<p>잠시만 기다려주세요 ...</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!loading && (\n\t\t\t\t<header>\n\t\t\t\t\t<ProgressBar left={left} src=\"Images/walkingDog.gif\" alt=\"walkingdog\" />\n\t\t\t\t\t<img className=\"dogFood\" src=\"/Images/dog-bowl.png\" alt=\"dogHouse\" />\n\t\t\t\t</header>\n\t\t\t)}\n\t\t\t{!loading && (\n\t\t\t\t<main>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t{question.split('<br>').map((line, idx) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={idx}>\n\t\t\t\t\t\t\t\t\t{line}\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<img className=\"icon\" src={symbol} />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{number !== 0 && (\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tonClick={previousQuestion}\n\t\t\t\t\t\t\t\tclassName=\"left chevrons\"\n\t\t\t\t\t\t\t\tsrc=\"/Images/leftchevron.png\"\n\t\t\t\t\t\t\t\talt=\"leftChevron\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{Object.keys(userAnswers)[0] &&\n\t\t\t\t\t\t\tObject.keys(userAnswers)[Object.keys(userAnswers).length - 1] !== `${id - 1}` && (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tonClick={nextQuestion}\n\t\t\t\t\t\t\t\t\tclassName=\"right chevrons\"\n\t\t\t\t\t\t\t\t\tsrc=\"/Images/rightchevron.png\"\n\t\t\t\t\t\t\t\t\talt=\"rightChevron\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t{selections.map((answer, idx) => (\n\t\t\t\t\t\t<ButtonStyle\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\t\tuserAnswers[`${number + 1}`] && userAnswers[`${number + 1}`] == answer.id ? 'white' : '',\n\t\t\t\t\t\t\t\tcolor: userAnswers[`${number + 1}`] && userAnswers[`${number + 1}`] == answer.id ? '#FFC6C9' : '',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={() => checkAnswer(id, answer.id)}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{answer.option}\n\t\t\t\t\t\t</ButtonStyle>\n\t\t\t\t\t))}\n\t\t\t\t</main>\n\t\t\t)}\n\t\t</AnswerWrapper>\n\t);\n}\n\nexport default Button;\n\nconst AnswerWrapper = styled.section`\n\t${({ theme }) => theme.positions.flexColumnY};\n\tmargin-top: 50px;\n\tcolor: ${({ theme }) => theme.colors.textWhite};\n\n\t.loadingSpinner {\n\t\tmargin-top: 100px;\n\t\timg {\n\t\t\twidth: 230px;\n\t\t}\n\t\tp {\n\t\t\tfont-size: 18px;\n\t\t\tfont-weight: bold;\n\t\t}\n\t}\n\theader {\n\t\twidth: 100%;\n\t\tpadding-bottom: 50px;\n\n\t\t.dogFood {\n\t\t\twidth: 25px;\n\t\t\tposition: relative;\n\t\t\tleft: 45px;\n\t\t\ttop: 40px;\n\t\t}\n\t}\n\n\tmain {\n\t\t${({ theme }) => theme.positions.flexColumnY};\n\t\tanimation: slide 0.5s forwards;\n\n\t\t@keyframes slide {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t\ttransform: translateX(80px);\n\t\t\t}\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t\ttransform: translateX(0);\n\t\t\t}\n\t\t}\n\n\t\th2 {\n\t\t\tmargin-bottom: 10px;\n\t\t\tline-height: 26px;\n\t\t\tfont-size: 20px;\n\t\t}\n\n\t\t.icon {\n\t\t\twidth: 40px;\n\t\t\tmargin-bottom: 80px;\n\t\t}\n\n\t\t.chevrons {\n\t\t\twidth: 25px;\n\t\t\tposition: relative;\n\t\t\tbottom: 110px;\n\t\t\tcursor: pointer;\n\t\t}\n\t\t.left {\n\t\t\tright: 90px;\n\t\t}\n\t\t.right {\n\t\t\tleft: 90px;\n\t\t}\n\t}\n\n\t@media ${({ theme }) => theme.size.mobile} {\n\t\tmargin-top: 15px;\n\n\t\tmain {\n\t\t\tpadding-top: 40px;\n\n\t\t\th2 {\n\t\t\t\tfont-size: 18px;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst ProgressBar = styled.img<ProgressBarProps>`\n\tposition: relative;\n\tleft: ${(props) => props.left}px;\n\twidth: 125px;\n`;\n\nconst ButtonStyle = styled.button`\n\twidth: 300px;\n\theight: 80px;\n\tmargin-bottom: 15px;\n\tborder: 2px solid ${({ theme }) => theme.colors.textWhite};\n\tfont-size: 14px;\n\tfont-weight: 600;\n\tcolor: ${({ theme }) => theme.colors.textWhite};\n\tcursor: pointer;\n\n\t&:active {\n\t\tbackground-color: ${({ theme }) => theme.colors.textWhite};\n\t\tcolor: ${({ theme }) => theme.colors.background};\n\t}\n`;\n",{"ruleId":"58","severity":1,"message":"59","line":17,"column":15,"nodeType":"60","messageId":"61","endLine":17,"endColumn":18,"suggestions":"62"},{"ruleId":"58","severity":1,"message":"59","line":7,"column":20,"nodeType":"60","messageId":"61","endLine":7,"endColumn":23,"suggestions":"63"},{"ruleId":"58","severity":1,"message":"59","line":12,"column":23,"nodeType":"60","messageId":"61","endLine":12,"endColumn":26,"suggestions":"64"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["65","66"],["67","68"],["69","70"],{"messageId":"71","fix":"72","desc":"73"},{"messageId":"74","fix":"75","desc":"76"},{"messageId":"71","fix":"77","desc":"73"},{"messageId":"74","fix":"78","desc":"76"},{"messageId":"71","fix":"79","desc":"73"},{"messageId":"74","fix":"80","desc":"76"},"suggestUnknown",{"range":"81","text":"82"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"81","text":"83"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"84","text":"82"},{"range":"84","text":"83"},{"range":"85","text":"82"},{"range":"85","text":"83"},[417,420],"unknown","never",[227,230],[532,535]]